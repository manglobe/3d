!function(a) {
    "use strict";
    function g(a) {
        a.touches || (a.touches = a.originalEvent.touches)
    }
    function h(a, b) {
        b._startY = a.touches[0].pageY,
        b.touchScrollTop = b.$scrollArea.scrollTop()
    }
    function i(b, c) {
        c._curY = b.touches[0].pageY,
        c._moveY = c._curY - c._startY,
        c._moveY > 0 ? c.direction = "down" : c._moveY < 0 && (c.direction = "up");
        var d = Math.abs(c._moveY);
        "" != c.opts.loadUpFn && c.touchScrollTop <= 0 && "down" == c.direction && !c.isLockUp && (b.preventDefault(),
        c.$domUp = a("." + c.opts.domUp.domClass),
        c.upInsertDOM || (c.$element.prepend('<div class="' + c.opts.domUp.domClass + '"></div>'),
        c.upInsertDOM = !0),
        n(c.$domUp, 0),
        d <= c.opts.distance ? (c._offsetY = d,
        c.$domUp.html(c.opts.domUp.domRefresh)) : d > c.opts.distance && d <= 2 * c.opts.distance ? (c._offsetY = c.opts.distance + .5 * (d - c.opts.distance),
        c.$domUp.html(c.opts.domUp.domUpdate)) : c._offsetY = c.opts.distance + .5 * c.opts.distance + .2 * (d - 2 * c.opts.distance),
        c.$domUp.css({
            height: c._offsetY
        }))
    }
    function j(b) {
        var c = Math.abs(b._moveY);
        "" != b.opts.loadUpFn && b.touchScrollTop <= 0 && "down" == b.direction && !b.isLockUp && (n(b.$domUp, 300),
        c > b.opts.distance ? (b.$domUp.css({
            height: b.$domUp.children().height()
        }),
        b.$domUp.html(b.opts.domUp.domLoad),
        b.loading = !0,
        b.opts.loadUpFn(b)) : b.$domUp.css({
            height: "0"
        }).on("webkitTransitionEnd mozTransitionEnd transitionend", function() {
            b.upInsertDOM = !1,
            a(this).remove()
        }),
        b._moveY = 0)
    }
    function k(a) {
        a.opts.autoLoad && a._scrollContentHeight - a._threshold <= a._scrollWindowHeight && m(a)
    }
    function l(a) {
        a._scrollContentHeight = a.opts.scrollArea == b ? e.height() : a.$element[0].scrollHeight
    }
    function m(a) {
        a.direction = "up",
        a.$domDown.html(a.opts.domDown.domLoad),
        a.loading = !0,
        a.opts.loadDownFn(a)
    }
    function n(a, b) {
        a.css({
            "-webkit-transition": "all " + b + "ms",
            transition: "all " + b + "ms"
        })
    }
    var f, b = window, c = document, d = a(b), e = a(c);
    a.fn.dropload = function(a) {
        return new f(this,a)
    }
    ,
    f = function(a, b) {
        var c = this;
        c.$element = a,
        c.upInsertDOM = !1,
        c.loading = !1,
        c.isLockUp = !1,
        c.isLockDown = !1,
        c.isData = !0,
        c._scrollTop = 0,
        c._threshold = 0,
        c.init(b)
    }
    ,
    f.prototype.init = function(f) {
        var l = this;
        l.opts = a.extend(!0, {}, {
            scrollArea: l.$element,
            domUp: {
                domClass: "dropload-up",
                domRefresh: '<div class="dropload-refresh">↓下拉刷新</div>',
                domUpdate: '<div class="dropload-update">↑释放更新</div>',
                domLoad: '<div class="dropload-load"><span class="loading"></span>加载中...</div>'
            },
            domDown: {
                domClass: "dropload-down",
                domRefresh: '<div class="dropload-refresh">↑上拉加载更多</div>',
                domLoad: '<div class="dropload-load"><span class="loading"></span>加载中...</div>',
                domNoData: '<div class="dropload-noData">暂无数据</div>'
            },
            autoLoad: !0,
            distance: 50,
            threshold: "",
            loadUpFn: "",
            loadDownFn: ""
        }, f),
        "" != l.opts.loadDownFn && (l.$element.append('<div class="' + l.opts.domDown.domClass + '">' + l.opts.domDown.domRefresh + "</div>"),
        l.$domDown = a("." + l.opts.domDown.domClass)),
        l._threshold = l.$domDown && "" === l.opts.threshold ? Math.floor(1 * l.$domDown.height() / 3) : l.opts.threshold,
        l.opts.scrollArea == b ? (l.$scrollArea = d,
        l._scrollContentHeight = e.height(),
        l._scrollWindowHeight = c.documentElement.clientHeight) : (l.$scrollArea = l.opts.scrollArea,
        l._scrollContentHeight = l.$element[0].scrollHeight,
        l._scrollWindowHeight = l.$element.height()),
        k(l),
        d.on("resize", function() {
            l._scrollWindowHeight = l.opts.scrollArea == b ? b.innerHeight : l.$element.height()
        }),
        l.$element.on("touchstart", function(a) {
            l.loading || (g(a),
            h(a, l))
        }),
        l.$element.on("touchmove", function(a) {
            l.loading || (g(a, l),
            i(a, l))
        }),
        l.$element.on("touchend", function() {
            l.loading || j(l)
        }),
        l.$scrollArea.on("scroll", function() {
            l._scrollTop = l.$scrollArea.scrollTop(),
            "" != l.opts.loadDownFn && !l.loading && !l.isLockDown && l._scrollContentHeight - l._threshold <= l._scrollWindowHeight + l._scrollTop && m(l)
        })
    }
    ,
    f.prototype.lock = function(a) {
        var b = this;
        void 0 === a ? "up" == b.direction ? b.isLockDown = !0 : "down" == b.direction ? b.isLockUp = !0 : (b.isLockUp = !0,
        b.isLockDown = !0) : "up" == a ? b.isLockUp = !0 : "down" == a && (b.isLockDown = !0,
        b.direction = "up")
    }
    ,
    f.prototype.unlock = function() {
        var a = this;
        a.isLockUp = !1,
        a.isLockDown = !1,
        a.direction = "up"
    }
    ,
    f.prototype.noData = function(a) {
        var b = this;
        void 0 === a || 1 == a ? b.isData = !1 : 0 == a && (b.isData = !0)
    }
    ,
    f.prototype.resetload = function() {
        var b = this;
        "down" == b.direction && b.upInsertDOM ? b.$domUp.css({
            height: "0"
        }).on("webkitTransitionEnd mozTransitionEnd transitionend", function() {
            b.loading = !1,
            b.upInsertDOM = !1,
            a(this).remove(),
            l(b)
        }) : "up" == b.direction && (b.loading = !1,
        b.isData ? (b.$domDown.html(b.opts.domDown.domRefresh),
        l(b),
        k(b)) : b.$domDown.html(b.opts.domDown.domNoData))
    }
}(window.Zepto || window.jQuery);
var TouchSlide = function(a) {                      //滑动
    a = a || {};
    var opts = {
        slideCell: a.slideCell || "#touchSlide",
        titCell: a.titCell || ".hd li",
        mainCell: a.mainCell || ".bd",
        effect: a.effect || "left",
        autoPlay: a.autoPlay || false,
        delayTime: a.delayTime || 200,
        interTime: a.interTime || 2500,
        defaultIndex: a.defaultIndex || 0,
        titOnClassName: a.titOnClassName || "on",
        autoPage: a.autoPage || false,
        prevCell: a.prevCell || ".prev",
        nextCell: a.nextCell || ".next",
        pageStateCell: a.pageStateCell || ".pageState",
        pnLoop: a.pnLoop == "undefined " ? true : a.pnLoop,
        startFun: a.startFun || null ,
        endFun: a.endFun || null ,
        switchLoad: a.switchLoad || null 
    };
    var slideCell = document.getElementById(opts.slideCell.replace("#", ""));
    if (!slideCell)
        return false;
    var obj = function(str, parEle) {
        str = str.split(" ");
        var par = [];
        parEle = parEle || document;
        var retn = [parEle];
        for (var i in str) {
            if (str[i].length != 0)
                par.push(str[i])
        }
        for (var i in par) {
            if (retn.length == 0)
                return false;
            var _retn = [];
            for (var r in retn) {
                if (par[i][0] == "#")
                    _retn.push(document.getElementById(par[i].replace("#", "")));
                else if (par[i][0] == ".") {
                    var tag = retn[r].getElementsByTagName("*");
                    for (var j = 0; j < tag.length; j++) {
                        var cln = tag[j].className;
                        if (cln && cln.search(new RegExp("\\b" + par[i].replace(".", "") + "\\b")) != -1) {
                            _retn.push(tag[j])
                        }
                    }
                } else {
                    var tag = retn[r].getElementsByTagName(par[i]);
                    for (var j = 0; j < tag.length; j++) {
                        _retn.push(tag[j])
                    }
                }
            }
            retn = _retn
        }
        return retn.length == 0 || retn[0] == parEle ? false : retn
    }
    ;
    var wrap = function(el, v) {
        var tmp = document.createElement("div");
        tmp.innerHTML = v;
        tmp = tmp.children[0];
        var _el = el.cloneNode(true);
        tmp.appendChild(_el);
        el.parentNode.replaceChild(tmp, el);
        conBox = _el;
        return tmp
    }
    ;
    var getStyleVal = function(el, attr) {
        var v = 0;
        if (el.currentStyle) {
            v = el.currentStyle[attr]
        } else {
            v = getComputedStyle(el, false)[attr]
        }
        return parseInt(v.replace("px", ""))
    }
    ;
    var addClass = function(ele, className) {
        if (!ele || !className || ele.className && ele.className.search(new RegExp("\\b" + className + "\\b")) != -1)
            return;
        ele.className += (ele.className ? " " : "") + className
    }
    ;
    var removeClass = function(ele, className) {
        if (!ele || !className || ele.className && ele.className.search(new RegExp("\\b" + className + "\\b")) == -1)
            return;
        ele.className = ele.className.replace(new RegExp("\\s*\\b" + className + "\\b","g"), "")
    }
    ;
    var effect = opts.effect;
    var prevBtn = obj(opts.prevCell, slideCell)[0];
    var nextBtn = obj(opts.nextCell, slideCell)[0];
    var pageState = obj(opts.pageStateCell)[0];
    var conBox = obj(opts.mainCell, slideCell)[0];
    if (!conBox)
        return false;
    var conBoxSize = conBox.children.length;
    var navObj = obj(opts.titCell, slideCell);
    var navObjSize = navObj ? navObj.length : conBoxSize;
    var sLoad = opts.switchLoad;
    var index = parseInt(opts.defaultIndex);
    var delayTime = parseInt(opts.delayTime);
    var interTime = parseInt(opts.interTime);
    var autoPlay = opts.autoPlay == "false" || opts.autoPlay == false ? false : true;
    var autoPage = opts.autoPage == "false" || opts.autoPage == false ? false : true;
    var loop = opts.pnLoop == "false" || opts.pnLoop == false ? false : true;
    var oldIndex = index;
    var inter = null ;
    var timeout = null ;
    var endTimeout = null ;
    var startX = 0;
    var startY = 0;
    var distX = 0;
    var distY = 0;
    var dist = 0;
    var isTouchPad = /hp-tablet/gi.test(navigator.appVersion);
    var hasTouch = "ontouchstart" in window && !isTouchPad;
    var touchStart = hasTouch ? "touchstart" : "mousedown";
    var touchMove = hasTouch ? "touchmove" : "";
    var touchEnd = hasTouch ? "touchend" : "mouseup";
    var slideH = 0;
    var slideW = conBox.parentNode.clientWidth;
    var twCell;
    var scrollY;
    var tempSize = conBoxSize;
    if (navObjSize == 0)
        navObjSize = conBoxSize;
    if (autoPage) {
        navObjSize = conBoxSize;
        navObj = navObj[0];
        navObj.innerHTML = "";
        var str = "";
        if (opts.autoPage == true || opts.autoPage == "true") {
            for (var i = 0; i < navObjSize; i++) {
                str += "<li>" + (i + 1) + "</li>"
            }
        } else {
            for (var i = 0; i < navObjSize; i++) {
                str += opts.autoPage.replace("$", i + 1)
            }
        }
        navObj.innerHTML = str;
        navObj = navObj.children
    }
    if (effect == "leftLoop") {
        tempSize += 2;
        conBox.appendChild(conBox.children[0].cloneNode(true));
        conBox.insertBefore(conBox.children[conBoxSize - 1].cloneNode(true), conBox.children[0])
    }
    twCell = wrap(conBox, '<div class="tempWrap" style="overflow:hidden; position:relative;"></div>');
    conBox.style.cssText = "width:" + tempSize * slideW + "px;" + "position:relative;overflow:hidden;padding:0;margin:0;";
    for (var i = 0; i < tempSize; i++) {
        conBox.children[i].style.cssText = "display:table-cell;vertical-align:top;width:" + slideW + "px"
    }
    var doStartFun = function() {
        if (typeof opts.startFun == "function") {
            opts.startFun(index, navObjSize)
        }
    }
    ;
    var doEndFun = function() {
        if (typeof opts.endFun == "function") {
            opts.endFun(index, navObjSize)
        }
    }
    ;
    var doSwitchLoad = function(moving) {
        var curIndex = (effect == "leftLoop" ? index + 1 : index) + moving;
        var changeImg = function(ind) {
            var img = conBox.children[ind].getElementsByTagName("img");
            for (var i = 0; i < img.length; i++) {
                if (img[i].getAttribute(sLoad)) {
                    img[i].setAttribute("src", img[i].getAttribute(sLoad));
                    img[i].removeAttribute(sLoad)
                }
            }
        }
        ;
        changeImg(curIndex);
        if (effect == "leftLoop") {
            switch (curIndex) {
            case 0:
                changeImg(conBoxSize);
                break;
            case 1:
                changeImg(conBoxSize + 1);
                break;
            case conBoxSize:
                changeImg(0);
                break;
            case conBoxSize + 1:
                changeImg(1);
                break
            }
        }
    }
    ;
    var orientationChange = function() {
        slideW = twCell.clientWidth;
        conBox.style.width = tempSize * slideW + "px";
        for (var i = 0; i < tempSize; i++) {
            conBox.children[i].style.width = slideW + "px"
        }
        var ind = effect == "leftLoop" ? index + 1 : index;
        translate(-ind * slideW, 0)
    }
    ;
    window.addEventListener("resize", orientationChange, false);
    var translate = function(dist, speed, ele) {
        if (!!ele) {
            ele = ele.style
        } else {
            ele = conBox.style
        }
        ele.webkitTransitionDuration = ele.MozTransitionDuration = ele.msTransitionDuration = ele.OTransitionDuration = ele.transitionDuration = speed + "ms";
        ele.webkitTransform = "translate(" + dist + "px,0)" + "translateZ(0)";
        ele.msTransform = ele.MozTransform = ele.OTransform = "translateX(" + dist + "px)"
    }
    ;
    var doPlay = function(isTouch) {
        switch (effect) {
        case "left":
            if (index >= navObjSize) {
                index = isTouch ? index - 1 : 0
            } else if (index < 0) {
                index = isTouch ? 0 : navObjSize - 1
            }
            if (sLoad != null ) {
                doSwitchLoad(0)
            }
            translate(-index * slideW, delayTime);
            oldIndex = index;
            break;
        case "leftLoop":
            if (sLoad != null ) {
                doSwitchLoad(0)
            }
            translate(-(index + 1) * slideW, delayTime);
            if (index == -1) {
                timeout = setTimeout(function() {
                    translate(-navObjSize * slideW, 0)
                }, delayTime);
                index = navObjSize - 1
            } else if (index == navObjSize) {
                timeout = setTimeout(function() {
                    translate(-slideW, 0)
                }, delayTime);
                index = 0
            }
            oldIndex = index;
            break
        }
        doStartFun();
        endTimeout = setTimeout(function() {
            doEndFun()
        }, delayTime);
        for (var i = 0; i < navObjSize; i++) {
            removeClass(navObj[i], opts.titOnClassName);
            if (i == index) {
                addClass(navObj[i], opts.titOnClassName)
            }
        }
        if (loop == false) {
            removeClass(nextBtn, "nextStop");
            removeClass(prevBtn, "prevStop");
            if (index == 0) {
                addClass(prevBtn, "prevStop")
            } else if (index == navObjSize - 1) {
                addClass(nextBtn, "nextStop")
            }
        }
        if (pageState) {
            pageState.innerHTML = "<span>" + (index + 1) + "</span>/" + navObjSize
        }
    }
    ;
    doPlay();
    if (autoPlay) {
        inter = setInterval(function() {
            index++;
            doPlay()
        }, interTime)
    }
    if (navObj) {
        for (var i = 0; i < navObjSize; i++) {
            (function() {
                var j = i;
                navObj[j].addEventListener("click", function(e) {
                    clearTimeout(timeout);
                    clearTimeout(endTimeout);
                    index = j;
                    doPlay()
                })
            })()
        }
    }
    if (nextBtn) {
        nextBtn.addEventListener("click", function(e) {
            if (loop == true || index != navObjSize - 1) {
                clearTimeout(timeout);
                clearTimeout(endTimeout);
                index++;
                doPlay()
            }
        })
    }
    if (prevBtn) {
        prevBtn.addEventListener("click", function(e) {
            if (loop == true || index != 0) {
                clearTimeout(timeout);
                clearTimeout(endTimeout);
                index--;
                doPlay()
            }
        })
    }
    var scroll_top;
    var tStart = function(e) {
        scroll_top = $("body").scrollTop();
        clearTimeout(timeout);
        clearTimeout(endTimeout);
        scrollY = undefined;
        distX = 0;
        var point = hasTouch ? e.touches[0] : e;
        startX = point.pageX;
        startY = point.pageY;
        conBox.addEventListener(touchMove, tMove, false);
        conBox.addEventListener(touchEnd, tEnd, false)
    }
    ;
    var tMove = function(e) {
        var scroll_tops = 0;
        scroll_tops = $("body").scrollTop();
        if (scroll_tops == scroll_top) {
            if (hasTouch) {
                if (e.touches.length > 1 || e.scale && e.scale !== 1)
                    return
            }
            var point = hasTouch ? e.touches[0] : e;
            distX = point.pageX - startX;
            distY = point.pageY - startY;
            if (typeof scrollY == "undefined") {
                scrollY = !!(scrollY || Math.abs(distX) < Math.abs(distY))
            }
            if (!scrollY) {
                e.preventDefault();
                if (autoPlay) {
                    clearInterval(inter)
                }
                switch (effect) {
                case "left":
                    if (index == 0 && distX > 0 || index >= navObjSize - 1 && distX < 0) {
                        distX = distX * .4
                    }
                    translate(-index * slideW + distX, 0);
                    break;
                case "leftLoop":
                    translate(-(index + 1) * slideW + distX, 0);
                    break
                }
                if (sLoad != null  && Math.abs(distX) > slideW / 3) {
                    doSwitchLoad(distX > -0 ? -1 : 1)
                }
            }
        }
    }
    ;
    var tEnd = function(e) {
        if (distX == 0)
            return;
        e.preventDefault();
        if (!scrollY) {
            if (Math.abs(distX) > slideW / 10) {
                distX > 0 ? index-- : index++
            }
            doPlay(true);
            if (autoPlay) {
                inter = setInterval(function() {
                    index++;
                    doPlay()
                }, interTime)
            }
        }
        conBox.removeEventListener(touchMove, tMove, false);
        conBox.removeEventListener(touchEnd, tEnd, false)
    }
    ;
    conBox.addEventListener(touchStart, tStart, false)
}
;
var itemIndex = 0, swiperLoad, dropload, winHeight = window.innerHeight, winWidth = window.innerWidth, reg = /\-?[0-9]+\.?[0-9]*/g;
$(function() {                     //下拉加载
    swiperLoad = function(obj) {
        var defaults = {
            swipadNav: null ,
            swipadView: null ,
            navAuto: true,
            navSlide: true,
            titOnClassName: "on",
            defaultIndex: 0,
			searchClean: undefined,
            autoLoad: true,
            siblings: null ,
            resetSearch: false,
            noData: {
                noClass: "nodata",
                noHtml: "<p></p>"
            },
            type:1,
            domDown: ["上拉加载更多", "加载中...", "没有更多的内容了..."],
            loadDownFn: undefined
        };
        obj.init = function(params) {
            params = $.extend({}, defaults, params);
            createSwipad(params);

            nav_Slide(params);
            touchSwipad(params);
            droad(params)
        }
        ;
        function createSwipad(params) {                //如何进行容器结构拓展，，，如何进行方法覆盖
            switch (params.type){
                case 0:                                 //列表的形式
                    var $swiperLoadHtml = $('<div><div class="swipad-nav"><div class="swipad-navsub"></div></div><div class="swipad-main"></div></div>');
                    for (var i in params.swipadNav) {                            //遍历导航
                        var $nodata = $('<div class="' + params.noData.noClass + '" style="display:none" >' + params.noData.noHtml + "</div>");
                        var $div = $('<div id="swipad-cont' + i + '" class="swipad-mainsub"><div class="swipad-maincont">    </div></div>');
                        var $a = $('<a class="swipad-navcont">' + params.swipadNav[i] + "</a>");
                        $div.find(".swipad-maincont").after($nodata);
                        $swiperLoadHtml.find(".swipad-navsub").append($a);
                        $swiperLoadHtml.find(".swipad-main").append($div)
                    }
                    $("#swipad").append($swiperLoadHtml.html());
                    break;
                case 1:                                 //列表的形式
                    var $swiperLoadHtml = $('<div><div class="swipad-nav"><div class="swipad-navsub"></div></div><div class="swipad-main"></div></div>');
                    for (var i in params.swipadNav) {                            //遍历导航
                        var $nodata = $('<div class="' + params.noData.noClass + '" style="display:none" >' + params.noData.noHtml + "</div>");
                        var $div = $('<div id="swipad-cont' + i + '" class="swipad-mainsub"><div class="swipad-maincont">    </div></div>');
                        var $swiper= '<div class="swiper-container px" style="height: 160px;;">'+
                                    '<div class="swiper-wrapper">'+
                                        '<div class="swiper-slide">'+
                                        '<img src="../images/img_project.jpg" alt="" width="100%"/>'+
                                        '</div>'+
                                        '<div class="swiper-slide">'+
                                        '<img src="../images/img_project.jpg" alt="" width="100%"/>'+
                                        '</div>'+
                                        '<div class="swiper-slide">'+
                                        '<img src="../images/img_project.jpg" alt="" width="100%"/>'+
                                        '</div>'+
                                    '</div>'+
                                    '<p class="swiper-news">'+
                                    '方太生活家走进2015米兰世博会111'+
                                    '</p>'+
                                    '<div class="swiper-pagination"></div>'+
                                    '</div>';
                        if(true){
                            $div.filter('#swipad-cont' + i).find('.swipad-maincont').prepend($swiper);  //有图片存在将图片加入进去

                        }
                        var $a = $('<a class="swipad-navcont">' + params.swipadNav[i] + "</a>");
                        $div.find(".swipad-maincont").after($nodata);
                        $swiperLoadHtml.find(".swipad-navsub").append($a);
                        $swiperLoadHtml.find(".swipad-main").append($div)
                    }
                    $("#swipad").append($swiperLoadHtml.html());
                    break;
                case 2:                                //瀑布流的形式
                    var $swiperLoadHtml = $('<div><div class="swipad-nav"><div class="swipad-navsub"></div></div><div class="swipad-main"></div></div>');
                    for (var i in params.swipadNav) {
                        var $nodata = $('<div class="' + params.noData.noClass + '" style="display:none" >' + params.noData.noHtml + "</div>");
                        var $div = $('<div id="swipad-cont' + i + '" class="swipad-mainsub"><div class="swipad-maincont"><div class="list-wrap"><div class="list clearfix"></div></div></div></div>');
                        var $a = $('<a class="swipad-navcont">' + params.swipadNav[i] + "</a>");
                        $div.find(".swipad-maincont").after($nodata);
                        $swiperLoadHtml.find(".swipad-navsub").append($a);
                        $swiperLoadHtml.find(".swipad-main").append($div)
                    }
                    $("#swipad").append($swiperLoadHtml.html());
                    break;
                case 3:                                                                               //有日期
                    var $swiperLoadHtml = $('<div><div class="swipad-nav"><div class="swipad-navsub"></div></div><div class="swipad-main"></div></div>');
                    for (var i in params.swipadNav) {
                        var $nodata = $('<div class="' + params.noData.noClass + '" style="display:none" >' + params.noData.noHtml + "</div>");
                        var $div = $('<div id="swipad-cont' + i + '" class="swipad-mainsub"><div class="swipad-maincont"><div class="news-list"><div class="time-line"></div> <ul>  </ul></div></div></div>');
                        var $a = $('<a class="swipad-navcont">' + params.swipadNav[i] + "</a>");
                        $div.find(".swipad-maincont").after($nodata);
                        $swiperLoadHtml.find(".swipad-navsub").append($a);
                        $swiperLoadHtml.find(".swipad-main").append($div)
                    }
                    $("#swipad").append($swiperLoadHtml.html());
                    break;
                case 4:                                 //日期
                    var $swiperLoadHtml = $('<div><div class="swipad-nav"><div class="swipad-navsub"></div></div><div class="swipad-main"></div></div>');
                    for (var i in params.swipadNav) {
                        var $nodata = $('<div class="' + params.noData.noClass + '" style="display:none" >' + params.noData.noHtml + "</div>");
                        var $div = $('<div id="swipad-cont' + i + '" class="swipad-mainsub"><div class="swipad-maincont">    </div></div>');
                        var $a = $('<a class="swipad-navcont">' + params.swipadNav[i] + "</a>");
                        $div.find(".swipad-maincont").after($nodata);
                        $swiperLoadHtml.find(".swipad-navsub").append($a);
                        $swiperLoadHtml.find(".swipad-main").append($div)
                    }
                    $("#swipad").append($swiperLoadHtml.html());
                    break;
            }
          /*  var $swiperLoadHtml = $('<div><div class="swipad-nav"><div class="swipad-navsub"></div></div><div class="swipad-main"></div></div>');
            for (var i in params.swipadNav) {
                var $nodata = $('<div class="' + params.noData.noClass + '" style="display:none" >' + params.noData.noHtml + "</div>");
                var $div = $('<div id="swipad-cont' + i + '" class="swipad-mainsub"><div class="swipad-maincont"></div></div>');
                var $a = $('<a class="swipad-navcont">' + params.swipadNav[i] + "</a>");
                $div.find(".swipad-maincont").after($nodata);
                $swiperLoadHtml.find(".swipad-navsub").append($a);
                $swiperLoadHtml.find(".swipad-main").append($div)
            }
            $("#swipad").append($swiperLoadHtml.html());*/


        }
        function touchSwipad(params) {
            TouchSlide({
                slideCell: "#swipad",
                titCell: ".swipad-nav a",
                mainCell: ".swipad-main",
                titOnClassName: params.titOnClassName,
                defaultIndex: params.defaultIndex,
                startFun: function(i) {
                    itemIndex = i;
                    params.searchClean && params.searchClean();
                    params.navAuto && nav_Auto(".swipad-navcont", i);
                    swipadTop(i, params)
                },
                endFun: function(i) {
                    params.resetSearch && resetSearch();
                    resetHeight(params);
                    unlock_()
                }
            })
        }
        function resetSearch() {
            if ($("#swipad-cont" + itemIndex).attr("searched")) {
                $("#swipad-cont" + itemIndex).removeAttr("searched");
                $("#swipad-cont" + itemIndex).removeAttr("counter");
                $("#swipad-cont" + itemIndex).removeAttr("loaded");
                $("#swipad-cont" + itemIndex).children().eq(0).html('');
                $("#swipad-cont" + itemIndex).children().eq(1).hide();
                $("#swipad-cont" + itemIndex).children().eq(2).show();
            }
        }
        var swipadIndex = 0;
        function swipadTop(index, params) {
            if (swipadIndex != index) {
                var height = winHeight;
                if (params.siblings != null ) {
                    for (var i in params.siblings) {
                        height -= $(params.siblings[i]).height()
                    }
                }
                swipadIndex = index;
                $(".swipad-main").parent().css("height", height)
            }
        }
        function droad(params) {
            dropload = $(".swipad-mainsub").dropload({
                scrollArea: window,
                domDown: {
                    domClass: "dropload-down",
                    domRefresh: '<div class="dropload-refresh">' + params.domDown[0] + "</div>",
                    domLoad: '<div class="dropload-load"><span class="loading"></span>' + params.domDown[1] + "</div>",
                    domNoData: '<div class="dropload-noData">' + params.domDown[2] + "</div>"
                },
                autoLoad: params.autoLoad,
                loadDownFn: function(me) {
                    params.loadDownFn(me, params)
                }
            })
        }
        resetHeight = function(params) {
            var justHeight = 0;
            var otherHeight = parseInt($(".swipad-mainsub").css("margin-top")) + parseInt($(".swipad-mainsub").css("margin-bottom")) + parseInt($(".swipad-mainsub").css("padding-top")) + parseInt($(".swipad-mainsub").css("padding-bottom")) + $(".swipad-maincont").siblings().height();
            var contHeight = $("#swipad-cont" + itemIndex).children().eq(0).height() + $("#swipad-cont" + itemIndex).children().eq(2).height();
            if (params.siblings != null ) {
                for (var i in params.siblings) {
                    justHeight += $(params.siblings[i]).height()
                }
            }
            var height = otherHeight + contHeight + justHeight <= winHeight ? winHeight - justHeight : otherHeight + contHeight;
            $(".swipad-main").parent().css("height", height)
        }
        ;
        return obj
    }(this)
});
function noData(obj) {
    $("#swipad-cont" + itemIndex).attr("loaded", true);
    obj.lock();
    obj.noData();
    obj.resetload();
    if ($("#swipad-cont" + itemIndex).find(".swipad-maincont").children().length == 0) {
        $("#swipad-cont" + itemIndex).children().eq(1).show();
        $("#swipad-cont" + itemIndex).children().eq(2).hide()
    }
}
function unlock_() {
    if (!$("#swipad-cont" + itemIndex).attr("loaded")) {
        dropload.unlock();
        dropload.noData(false)
    } else {
        dropload.lock();
        dropload.noData()
    }
    dropload.resetload()
}
function nav_Auto(children, i) {
    wrap = document.querySelector(children).parentNode;
    var position = $(children).eq(i).position().left;
    if (position > winWidth - childrenWidth + 10) {
        var transforms = Translate - childrenWidth;
        transforms = transforms < transformWidth ? transformWidth : transforms;
        wrap.style.WebkitTransform = "translate3d(" + transforms + "px, 0, 0)";
        wrap.style.transform = "translate3d(" + transforms + "px, 0, 0)"
    } else if (position < 0) {
        var transforms = Translate + childrenWidth;
        transforms = transforms > 0 ? 0 : transforms;
        wrap.style.WebkitTransform = "translate3d(" + transforms + "px, 0, 0)";
        wrap.style.transform = "translate3d(" + transforms + "px, 0, 0)"
    }
    Translate = wrap.style.transform ? parseInt(wrap.style.transform.match(reg)[1]) : 0
}
var childrenWidth;
var wrap, transformWidth;
var Translate = 0;
function nav_Slide(params) {
    var count = params.swipadView;
    var childLength = $(".swipad-navsub").children().length;
    var childrenLen = childLength > 4 ? 4 : childLength;
    cou = count == null  ? childrenLen : count;
    childrenWidth = winWidth / cou;
    var navWidth = childrenWidth * childLength;
    $(".swipad-navsub").css("width", navWidth);
    var startPosition, endPosition, TranslateMonitor;
    wrap = document.querySelector(".swipad-navsub");
    var parent = wrap.parentNode;
    transformWidth = -(navWidth - winWidth);
    var transWidth = transformWidth - winWidth / 3;
    wrap.style.WebkitTransitionDuration = ".2s";
    wrap.style.transitionDuration = ".2s";
    wrap.style.WebkitTransform = "translate3d(0, 0, 0)";
    wrap.style.transform = "translate3d(0, 0, 0)";
    parent.addEventListener("touchstart", function(event) {
        wrap.style.WebkitTransitionDuration = "0s";
        wrap.style.transitionDuration = "0s";
        var touch = event.touches[0];
        startPosition = {
            x: touch.pageX,
            y: touch.pageY
        }
    });
    parent.addEventListener("touchmove", function(event) {
        event.preventDefault();
        event.stopPropagation();
        var touch = event.touches[0];
        endPosition = {
            x: touch.pageX,
            y: touch.pageY
        };
        var deltaX = endPosition.x - startPosition.x;
        var deltaY = endPosition.y - startPosition.y;
        var moveLength = parseInt(Math.sqrt(Math.pow(Math.abs(deltaX), 2) + Math.pow(Math.abs(deltaY), 2)));
        TranslateMonitor = wrap.style.transform ? wrap.style.transform.match(reg)[1] : 0;
        if (deltaX > 0) {
            if (TranslateMonitor < winWidth / 3) {
                moveLength = Translate + moveLength;
                wrap.style.WebkitTransform = "translate3d(" + moveLength + "px, 0, 0)";
                wrap.style.transform = "translate3d(" + moveLength + "px, 0, 0)"
            }
        } else {
            if (TranslateMonitor > transWidth) {
                moveLength = Translate - moveLength;
                wrap.style.WebkitTransform = "translate3d(" + moveLength + "px, 0, 0)";
                wrap.style.transform = "translate3d(" + moveLength + "px, 0, 0)"
            }
        }
    });
    parent.addEventListener("touchend", function(event) {
        Translate = wrap.style.transform ? parseInt(wrap.style.transform.match(reg)[1]) : 0;
        wrap.style.WebkitTransitionDuration = ".2s";
        wrap.style.transitionDuration = ".2s";
        if (Translate > 0) {
            wrap.style.WebkitTransform = "translate3d(0, 0, 0)";
            wrap.style.transform = "translate3d(0, 0, 0)";
            Translate = 0
        } else if (Translate < transformWidth) {
            wrap.style.WebkitTransform = "translate3d(" + transformWidth + "px, 0, 0)";
            wrap.style.transform = "translate3d(" + transformWidth + "px, 0, 0)";
            Translate = transformWidth
        }
    })
}
String.prototype.temp = function(obj) {
    return this.replace(/\$\w+\$/gi, function(matchs) {
        var returns = obj[matchs.replace(/\$/g, "")];
        return returns + "" == "undefined" ? "" : returns
    })
}
;

